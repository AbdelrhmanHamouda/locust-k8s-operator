micronaut:
  application:
    name: locustK8sOperator
  server:
    port: ${APP_SERVER_PORT:8081}

  metrics:
    binders:
      web:
        enabled: ${METRICS_WEB_ENABLE:true}
      jvm:
        enabled: ${METRICS_JVM_ENABLE:true}
      uptime:
        enabled: ${METRICS_UPTIME_ENABLE:true}
      processor:
        enabled: ${METRICS_PROCESSOR_ENABLE:true}
      files:
        enabled: ${METRICS_FILES_ENABLE:true}
      logback:
        enabled: ${METRICS_LOGBACK_ENABLE:true}
      executor:
        enabled: ${METRICS_EXECUTOR_ENABLE:true}
      kafka:
        enabled: ${METRICS_KAFKA_ENABLE:false}
    export:
      prometheus:
        enabled: true
        descriptions: true
        step: ${METRICS_PROMETHEUS_STEP:`PT30S`}
    enabled: true
netty:
  default:
    allocator:
      max-order: 3

---
config:
  watcher:
    # 1m -> every 1 minute
    resyncPeriod: 1m
  k8s:
    namespace: ${K8S_NAMESPACE:default}
  load-generation-jobs:
    ttl-seconds-after-finished: ${JOB_TTL_SECONDS_AFTER_FINISHED:}
  load-generation-pods:
    affinity:
      enableCrInjection: ${ENABLE_AFFINITY_CR_INJECTION:false}
    taintTolerations:
      enableCrInjection: ${ENABLE_TAINT_TOLERATIONS_CR_INJECTION:false}
    resource:
      cpu-request: ${POD_CPU_REQUEST:`250m`}
      mem-request: ${POD_MEM_REQUEST:`128Mi`}
      ephemeralStorage-request: ${POD_EPHEMERAL_REQUEST:`30M`}
      cpu-limit: ${POD_CPU_LIMIT:`1000m`}
      mem-limit: ${POD_MEM_LIMIT:`1024Mi`}
      ephemeralStorage-limit: ${POD_EPHEMERAL_LIMIT:`50M`}
    metricsExporter:
      image: ${METRICS_EXPORTER_IMAGE:`containersol/locust_exporter:v0.5.0`}
      port: ${METRICS_EXPORTER_PORT:`9646`}
      pullPolicy: ${METRICS_EXPORTER_IMAGE_PULL_POLICY:`Always`}
      resource:
        cpu-request: ${METRICS_EXPORTER_CPU_REQUEST:`250m`}
        mem-request: ${METRICS_EXPORTER_MEM_REQUEST:`128Mi`}
        ephemeralStorage-request: ${METRICS_EXPORTER_EPHEMERAL_REQUEST:`30M`}
        cpu-limit: ${METRICS_EXPORTER_CPU_LIMIT:`1000m`}
        mem-limit: ${METRICS_EXPORTER_MEM_LIMIT:`1024Mi`}
        ephemeralStorage-limit: ${METRICS_EXPORTER_EPHEMERAL_LIMIT:`50M`}

    kafka:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:`localhost:9092`}
      security:
        enabled: ${KAFKA_SECURITY_ENABLED:`false`}
        protocol: ${KAFKA_SECURITY_PROTOCOL_CONFIG:`SASL_PLAINTEXT`}
        username: ${KAFKA_USERNAME:`localKafkaUser`}
        password: ${KAFKA_PASSWORD:`localKafkaPassword`}
      sasl:
        mechanism: ${KAFKA_SASL_MECHANISM:`SCRAM-SHA-512`}
        jaas:
          config: ${KAFKA_SASL_JAAS_CONFIG:`placeholder`}


