apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # Name must match the spec fields below, and be in the form: <plural>.<group>
  name: locusttests.locust.io
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: locust.io
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            # Fields to validate are the following:
            metadata: # 'metadata' should be an object
              type: object
              properties: # With the following field 'name'
                name:
                  type: string # Of type 'string'
                  pattern: '^[a-z]+[-a-z0-9]*\.[-a-z0-9]+$' # allows only 'word.word' names. Usage example (<teamName>.<testName>)
            spec:  # Root field 'spec'
              type: object  # It is an object
              properties: # And has the following fields
                labels: # Child field 'labels'
                  description: Labels attached to deployed pods
                  type: object
                  properties:
                    master:
                      description: Labels attached to the master pod
                      type: object
                      additionalProperties:
                        type: string
                    worker:
                      description: Labels attached to worker pods
                      type: object
                      additionalProperties:
                        type: string
                annotations: # Child field 'annotations'
                  description: Annotations attached to deployed pods
                  type: object
                  properties:
                    master:
                      description: Annotations attached to the master pod
                      type: object
                      additionalProperties:
                        type: string
                    worker:
                      description: Annotations attached to worker pods
                      type: object
                      additionalProperties:
                        type: string
                affinity: # Child field 'affinity'
                  description: Affinity information to be attached to pods
                  type: object
                  properties:
                    nodeAffinity:
                      description: Kubernetes node affinity to be attached to pods
                      type: object
                      properties:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: Kubernetes node affinity to be attached to pods
                          type: object
                          additionalProperties:
                            type: string
                tolerations: # Child field 'tolerations'
                  description: Taint toleration information to be attached to pods
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        description: Toleration key
                        type: string
                      operator:
                        description: Toleration evaluation operator
                        type: string
                        enum:
                          - "Exists"
                          - "Equal"
                      value:
                        description: Toleration value
                        type: string
                      effect:
                        description: Toleration effect
                        type: string
                        enum:
                          - "NoSchedule"
                          - "PreferNoSchedule"
                          - "NoExecute"
                    required: [ "key", "operator", "effect" ]
                masterCommandSeed: # Child field 'masterCommandSeed'
                  description: Master pod command seed
                  type: string
                workerCommandSeed: # Child field 'workerCommandSeed'
                  description: Worker pod command seed
                  type: string
                workerReplicas: # Child field 'workerReplicas'
                  description: Number of worker pods to spawn
                  type: integer
                  minimum: 1
                  maximum: 500 # Change limit based on infra capabilities
                  default: 1
                image: # Child field 'image'
                  description: Locust image
                  type: string
                imagePullPolicy:
                  description: Image pull policy
                  type: string
                  enum:
                    - "Always"
                    - "IfNotPresent"
                    - "Never"
                imagePullSecrets:
                  description: Secrets for pulling images from private registries
                  type: array
                  items:
                    type: string
                configMap: # Child field 'configMap'
                  description: Configuration map name containing the test
                  type: string
              required: ["masterCommandSeed", "workerCommandSeed", "workerReplicas", "image"]
      # Enables to add new column when listing instances `kubectl get lotest`
      additionalPrinterColumns:
        - name: master_cmd
          type: string
          description: Master pod command seed
          jsonPath: .spec.masterCommandSeed
        - name: worker_replica_count
          type: integer
          description: Number of requested worker pods
          jsonPath: .spec.workerReplicas
        - name: Image
          type: string
          description: Locust image
          jsonPath: .spec.image
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
  # Either Namespaced or Cluster
  scope: Namespaced
  names:
    # Plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: locusttests
    # Singular name to be used as an alias on the CLI and for display
    singular: locusttest
    # Kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: LocustTest
    # ShortNames allow shorter string to match your resource on the CLI
    shortNames:
      - lotest
