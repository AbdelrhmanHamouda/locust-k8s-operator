# Check if serviceAccount creation is enabled.
# + If false, the entire block will be skipped.
{{- if .Values.serviceAccount.create -}}

# Initialize variables for reuse.
# + $serviceAccountName; stores the name of the service account.
# + $namespace; stores the namespace where resources will be deployed.
# + $k8sServicesVerbs and $k8sJobsVerbs; define the permissions for Kubernetes services and jobs, respectively.

{{- $serviceAccountName := include "locust-k8s-operator.serviceAccountName" . }}
{{- $namespace := .Release.Namespace | quote }}
{{- $k8sServicesVerbs := list "get" "list" "create" "update" "delete" }}
{{- $k8sJobsVerbs := list "get" "list" "create" "update" "delete" "patch" }}

# Define the ServiceAccount resource.
# This account is used to execute the tasks within the Kubernetes cluster.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $serviceAccountName }}
  namespace: {{ $namespace }}
  labels:
    {{- include "locust-k8s-operator.labels" . | nindent 4 }}

# Add image pull secrets if specified in values.
{{- if .Values.image.pullSecrets }}
imagePullSecrets:
{{- range .Values.image.pullSecrets }}
  - name: {{ . }}
{{- end }}
{{- end }}
---

# Define RBAC (Role-Based Access Control) resources.
# This section creates either a ClusterRole or a Role based on the value of k8s.clusterRole.enabled.

# Conditionally create either a ClusterRole (for cluster-wide permissions)
# + or a Role (for namespace-specific permissions).
# + The default is to create a namespace-specific Role.
{{- if .Values.k8s.clusterRole.enabled }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
{{- else }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
{{- end }}
metadata:
  name: {{ $serviceAccountName }}

  # Specify the namespace only if creating a Role (namespace-specific permissions).
  {{- if not .Values.k8s.clusterRole.enabled }}
  namespace: {{ $namespace }}
  {{- end }}

rules:
  - apiGroups: [ "locust.io" ]
    resources: [ "locusttests" ]
    verbs: [ "*" ]  # Full access to locusttests resources.
  - apiGroups: [ "*" ]
    resources: [ "services" ]
    verbs: {{ toYaml $k8sServicesVerbs | nindent 6 }}  # Permissions for managing services.
  - apiGroups: [ "*" ]
    resources: [ "jobs" ]
    verbs: {{ toYaml $k8sJobsVerbs | nindent 6 }}  # Permissions for managing jobs.

---

# Create a corresponding ClusterRoleBinding or RoleBinding
# + to bind the ServiceAccount to the appropriate ClusterRole or Role.

{{- if .Values.k8s.clusterRole.enabled }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
{{- else }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
{{- end }}
metadata:
  name: {{ $serviceAccountName }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: {{ if .Values.k8s.clusterRole.enabled }}ClusterRole{{ else }}Role{{ end }}
  name: {{ $serviceAccountName }}
subjects:
  - kind: ServiceAccount
    name: {{ $serviceAccountName }}
    namespace: {{ $namespace }}
{{- end }}
