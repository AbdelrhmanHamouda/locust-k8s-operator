name: CI Pipeline

on: [ push, pull_request ]

permissions:
  # todo change back to read when moving docs flow to release
  contents: write

jobs:
  Build:
    name: Build & Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

      - name: Build
        uses: gradle/gradle-build-action@v2.3.2
        with:
          arguments: build jacocoTestReport -i

      - name: Report coverage
        uses: codecov/codecov-action@v3
        with:
          name: branch-${{ github.ref }}
          verbose: true
          fail_ci_if_error: true

      - name: Run codacy coverage reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

      - uses: actions/upload-artifact@v3.1.0
        with:
          name: Build Artifacts
          path: |
            **/build/reports

  lint-test:
    name: Lint & Test chart
    runs-on: ubuntu-latest
    needs:
      - Build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --target-branch ${{ github.event.repository.default_branch }} --config .github/ct.yaml


      - name: Create kind cluster
        uses: helm/kind-action@v1.4.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Run chart-testing (install)
        run: ct install

  # todo: move to release after testing
  docs-release:
    name: Publish documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

#      - name: Setup python
#        uses: actions/setup-python@v4
#        with:
#          python-version: 3.x
#
#      - name: Install Python dependencies
#        run: pip install \
#          mkdocs-material \
#          mkdocs-git-revision-date-localized-plugin
#
#      - name: Deploy documentation
#        run: mkdocs gh-deploy -x OPERATOR_DOCS --force
#        env:
#          GH_TOKEN: ${{ secrets.GH_TOKEN }}



      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies
          #python -m pip install -U mkdocs mkdocs-material
        run: |
          pip install \
          mkdocs-material \
          mkdocs-git-revision-date-localized-plugin

      - name: Build docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -m mkdocs build

      - name: Push doc to Github Page
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          keep_files: true
          user_name: ${{ github.actor }}
          user_email: ${{ github.actor }}@users.noreply.github.com